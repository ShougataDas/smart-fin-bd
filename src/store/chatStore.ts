import { create } from 'zustand';
import { persist, createJSONStorage } from 'zustand/middleware';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { ChatMessage, MessageType } from '@/types';

interface ChatState {
    messages: ChatMessage[];
    isTyping: boolean;
    isLoading: boolean;
    error: string | null;
    conversationId: string | null;
}

interface ChatActions {
    addMessage: (message: Omit<ChatMessage, 'id' | 'timestamp'>) => void;
    sendMessage: (text: string) => Promise<void>;
    clearMessages: () => void;
    setTyping: (isTyping: boolean) => void;
    clearError: () => void;
    generateAIResponse: (userMessage: string) => Promise<string>;
}

type ChatStore = ChatState & ChatActions;

const initialState: ChatState = {
    messages: [],
    isTyping: false,
    isLoading: false,
    error: null,
    conversationId: null,
};

export const useChatStore = create<ChatStore>()(
    persist(
        (set, get) => ({
            ...initialState,

            addMessage: (messageData: Omit<ChatMessage, 'id' | 'timestamp'>) => {
                const newMessage: ChatMessage = {
                    ...messageData,
                    id: Date.now().toString() + Math.random().toString(36).substr(2, 9),
                    timestamp: new Date(),
                };

                set(state => ({
                    messages: [...state.messages, newMessage],
                }));
            },

            sendMessage: async (text: string) => {
                const { addMessage, generateAIResponse, setTyping } = get();

                // Add user message
                addMessage({
                    userId: 'current_user', // This should come from auth store
                    text,
                    isUser: true,
                    type: MessageType.TEXT,
                });

                // Set typing indicator
                setTyping(true);
                set({ isLoading: true, error: null });

                try {
                    // Generate AI response
                    const aiResponse = await generateAIResponse(text);

                    // Add AI message
                    addMessage({
                        userId: 'ai_assistant',
                        text: aiResponse,
                        isUser: false,
                        type: MessageType.TEXT,
                    });

                } catch (error) {
                    set({
                        error: error instanceof Error ? error.message : 'Failed to get AI response',
                    });

                    // Add error message
                    addMessage({
                        userId: 'ai_assistant',
                        text: 'ржжрзБржГржЦрж┐ржд, ржЖржорж┐ ржПржЗ ржорзБрж╣рзВрж░рзНрждрзЗ ржЖржкржирж╛рж░ ржкрзНрж░рж╢рзНржирзЗрж░ ржЙрждрзНрждрж░ ржжрж┐рждрзЗ ржкрж╛рж░ржЫрж┐ ржирж╛ред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржкрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред',
                        isUser: false,
                        type: MessageType.TEXT,
                    });
                } finally {
                    setTyping(false);
                    set({ isLoading: false });
                }
            },

            generateAIResponse: async (userMessage: string): Promise<string> => {
                // Simulate API delay
                await new Promise(resolve => setTimeout(resolve, 1500 + Math.random() * 1000));

                const lowerMessage = userMessage.toLowerCase();

                // Bengali financial advice responses
                if (lowerMessage.includes('рж╕ржЮрзНржЪржпрж╝ржкрждрзНрж░') || lowerMessage.includes('sanchayapatra')) {
                    return `рж╕ржЮрзНржЪржпрж╝ржкрждрзНрж░ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ рж╕рж░ржХрж╛рж░рзЗрж░ ржПржХржЯрж┐ ржЕрждрзНржпржирзНржд ржирж┐рж░рж╛ржкржж ржмрж┐ржирж┐ржпрж╝рзЛржЧ ржорж╛ржзрзНржпржоред ржмрж░рзНрждржорж╛ржирзЗ ржПрждрзЗ рзо.рзл% ржкрж░рзНржпржирзНржд ржмрж╛рж░рзНрж╖рж┐ржХ рж╕рзБржж ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ред 

тЬЕ **рж╕рзБржмрж┐ржзрж╛рж╕ржорзВрж╣:**
тАв рж╕рж░ржХрж╛рж░рж┐ ржЧрзНржпрж╛рж░рж╛ржирзНржЯрж┐
тАв ржирж┐ржпрж╝ржорж┐ржд рж╕рзБржж ржкрзНрж░ржжрж╛ржи
тАв ржХрж░ рж╕рзБржмрж┐ржзрж╛ (рж╕рзАржорж┐ржд ржкрж░рж┐ржорж╛ржгрзЗ)
тАв ржирзНржпрзВржирждржо рззрзжрзжрзж ржЯрж╛ржХрж╛ ржерзЗржХрзЗ рж╢рзБрж░рзБ

ЁЯУК **ржЖржкржирж╛рж░ ржЬржирзНржп ржЙржкржпрзБржХрзНрждрждрж╛:** ржЖржкржирж╛рж░ ржЭрзБржБржХрж┐ рж╕рж╣ржирж╢рзАрж▓рждрж╛ ржЕржирзБржпрж╛ржпрж╝рзА ржПржЯрж┐ ржПржХржЯрж┐ ржЪржорзОржХрж╛рж░ ржмрж┐ржХрж▓рзНржк рж╣рждрзЗ ржкрж╛рж░рзЗред`;
                }

                if (lowerMessage.includes('ржорж┐ржЙржЪрзБржпрж╝рж╛рж▓ ржлрж╛ржирзНржб') || lowerMessage.includes('mutual fund')) {
                    return `ржорж┐ржЙржЪрзБржпрж╝рж╛рж▓ ржлрж╛ржирзНржб рж╣рж▓рзЛ ржПржХржЯрж┐ ржпрзМрже ржмрж┐ржирж┐ржпрж╝рзЛржЧ ржорж╛ржзрзНржпржо ржпрзЗржЦрж╛ржирзЗ ржЕржирзЗржХ ржмрж┐ржирж┐ржпрж╝рзЛржЧржХрж╛рж░рзАрж░ ржЕрж░рзНрже ржПржХрж╕рж╛ржерзЗ ржХрж░рзЗ ржкрзЗрж╢рж╛ржжрж╛рж░ ржлрж╛ржирзНржб ржорзНржпрж╛ржирзЗржЬрж╛рж░рж░рж╛ ржмрж┐ржнрж┐ржирзНржи ржХрзЛржорзНржкрж╛ржирж┐рж░ рж╢рзЗржпрж╝рж╛рж░рзЗ ржмрж┐ржирж┐ржпрж╝рзЛржЧ ржХрж░рзЗржиред

ЁЯТ░ **ржкрзНрж░рждрзНржпрж╛рж╢рж┐ржд рж░рж┐ржЯрж╛рж░рзНржи:** рззрзи-рззрзл% (ржмрж╛ржЬрж╛рж░ ржЕржирзБржпрж╛ржпрж╝рзА)
ЁЯОп **ржирзНржпрзВржирждржо ржмрж┐ржирж┐ржпрж╝рзЛржЧ:** рзл,рзжрзжрзж ржЯрж╛ржХрж╛

**рж╕рзБржмрж┐ржзрж╛:**
тАв ржкрзЗрж╢рж╛ржжрж╛рж░ ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛
тАв ржЭрзБржБржХрж┐ ржмрж┐ржнрж╛ржЬржи
тАв рждрж░рж▓рждрж╛ (рж╕рж╣ржЬрзЗ ржмрж┐ржХрзНрж░ржпрж╝)
тАв рж╕рзНржмржЪрзНржЫрждрж╛

**ржЭрзБржБржХрж┐:** ржорж╛ржЭрж╛рж░рж┐ ржерзЗржХрзЗ ржЙржЪрзНржЪ (ржмрж╛ржЬрж╛рж░рзЗрж░ ржЙржкрж░ ржирж┐рж░рзНржнрж░рж╢рзАрж▓)`;
                }

                if (lowerMessage.includes('рж╕рзНржЯржХ') || lowerMessage.includes('stock') || lowerMessage.includes('рж╢рзЗржпрж╝рж╛рж░')) {
                    return `рж╕рзНржЯржХ ржорж╛рж░рзНржХрзЗржЯрзЗ ржмрж┐ржирж┐ржпрж╝рзЛржЧ ржЙржЪрзНржЪ рж░рж┐ржЯрж╛рж░рзНржирзЗрж░ рж╕ржорзНржнрж╛ржмржирж╛ рж░ржпрж╝рзЗржЫрзЗ, рждржмрзЗ ржЭрзБржБржХрж┐ржУ ржмрзЗрж╢рж┐ред

ЁЯЪА **рж╕ржорзНржнрж╛ржмрзНржп рж░рж┐ржЯрж╛рж░рзНржи:** рззрзл-рзирзл% (ржжрзАрж░рзНржШржорзЗржпрж╝рж╛ржжрзЗ)
тЪая╕П **ржЭрзБржБржХрж┐:** ржЙржЪрзНржЪ

**рж╢рзБрж░рзБ ржХрж░рж╛рж░ ржЯрж┐ржкрж╕:**
рзз. ржнрж╛рж▓рзЛ ржХрзЛржорзНржкрж╛ржирж┐ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи
рзи. ржкрзНрж░ржержорзЗ ржХржо ржЕрж░рзНрже ржжрж┐ржпрж╝рзЗ рж╢рзБрж░рзБ ржХрж░рзБржи
рзй. ржжрзАрж░рзНржШржорзЗржпрж╝рж╛ржжрзА ржжрзГрж╖рзНржЯрж┐ржнржЩрзНржЧрж┐ рж░рж╛ржЦрзБржи
рзк. ржмрж╛ржЬрж╛рж░ ржЧржмрзЗрж╖ржгрж╛ ржХрж░рзБржи
рзл. ржмрж┐ржнрж┐ржирзНржи рж╕рзЗржХрзНржЯрж░рзЗ ржмрж┐ржирж┐ржпрж╝рзЛржЧ ржХрж░рзБржи

**рж╕рзБржкрж╛рж░рж┐рж╢:** ржЖржкржирж╛рж░ ржкрзЛрж░рзНржЯржлрзЛрж▓рж┐ржУрж░ рзирзж-рзйрзж% рж╕рзНржЯржХрзЗ рж░рж╛ржЦрждрзЗ ржкрж╛рж░рзЗржиред`;
                }

                if (lowerMessage.includes('dps') || lowerMessage.includes('ржбрж┐ржкрж┐ржПрж╕')) {
                    return `DPS (Deposit Pension Scheme) ржПржХржЯрж┐ ржжрзАрж░рзНржШржорзЗржпрж╝рж╛ржжрзА рж╕ржЮрзНржЪржпрж╝ ржкрж░рж┐ржХрж▓рзНржкржирж╛ред

ЁЯТ╡ **ржмрзИрж╢рж┐рж╖рзНржЯрзНржп:**
тАв ржорж╛рж╕рж┐ржХ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржкрж░рж┐ржорж╛ржг ржЬржорж╛
тАв рзл-рзирзж ржмржЫрж░рзЗрж░ ржорзЗржпрж╝рж╛ржж
тАв рзн-рзо% ржмрж╛рж░рзНрж╖рж┐ржХ рж╕рзБржж
тАв ржкрзЗржирж╢ржи рж╕рзБржмрж┐ржзрж╛

**рж╕рзБржмрж┐ржзрж╛:**
тАв ржирж┐ржпрж╝ржорж┐ржд рж╕ржЮрзНржЪржпрж╝рзЗрж░ ржЕржнрзНржпрж╛рж╕
тАв ржирж┐рж░рж╛ржкржж ржмрж┐ржирж┐ржпрж╝рзЛржЧ
тАв ржкрзЗржирж╢ржи ржкрж░рж┐ржХрж▓рзНржкржирж╛
тАв ржирзНржпрзВржирждржо рзлрзжрзж ржЯрж╛ржХрж╛/ржорж╛рж╕

**ржЙржкржпрзБржХрзНрждрждрж╛:** ржирж┐ржпрж╝ржорж┐ржд ржЖржпрж╝рзЗрж░ ржЬржирзНржп ржПржмржВ ржЕржмрж╕рж░ ржкрж░рж┐ржХрж▓рзНржкржирж╛рж░ ржЬржирзНржп ржЪржорзОржХрж╛рж░ред`;
                }

                if (lowerMessage.includes('ржмржпрж╝рж╕') || lowerMessage.includes('age') || lowerMessage.includes('ржХржд ржЯрж╛ржХрж╛')) {
                    return `ржмржпрж╝рж╕ ржЕржирзБржпрж╛ржпрж╝рзА рж╕ржЮрзНржЪржпрж╝рзЗрж░ ржПржХржЯрж┐ рж╕рж╛ржзрж╛рж░ржг ржирж┐ржпрж╝ржо:

ЁЯУИ **ржмржпрж╝рж╕ ржнрж┐рждрзНрждрж┐ржХ рж╕ржЮрзНржЪржпрж╝ ржЧрж╛ржЗржб:**
тАв рзирзж-рзйрзж ржмржЫрж░: ржорж╛рж╕рж┐ржХ ржЖржпрж╝рзЗрж░ рзирзж-рзйрзж%
тАв рзйрзж-рзкрзж ржмржЫрж░: ржорж╛рж╕рж┐ржХ ржЖржпрж╝рзЗрж░ рзйрзж-рзкрзж%
тАв рзкрзж-рзлрзж ржмржЫрж░: ржорж╛рж╕рж┐ржХ ржЖржпрж╝рзЗрж░ рзкрзж-рзлрзж%
тАв рзлрзж+ ржмржЫрж░: ржорж╛рж╕рж┐ржХ ржЖржпрж╝рзЗрж░ рзлрзж%+

**ржЬрж░рзБрж░рж┐ рждрж╣ржмрж┐рж▓:** рзм-рззрзи ржорж╛рж╕рзЗрж░ ржЦрж░ржЪрзЗрж░ рж╕ржорж╛ржи

**ржмрж┐ржирж┐ржпрж╝рзЛржЧ ржмрж┐ржнрж╛ржЬржи (ржмржпрж╝рж╕ ржЕржирзБржпрж╛ржпрж╝рзА):**
тАв рждрж░рзБржг ржмржпрж╝рж╕: рзнрзж% ржЭрзБржБржХрж┐ржкрзВрж░рзНржг, рзйрзж% ржирж┐рж░рж╛ржкржж
тАв ржоржзрзНржп ржмржпрж╝рж╕: рзлрзж% ржЭрзБржБржХрж┐ржкрзВрж░рзНржг, рзлрзж% ржирж┐рж░рж╛ржкржж
тАв ржмржпрж╝рж╕рзНржХ: рзйрзж% ржЭрзБржБржХрж┐ржкрзВрж░рзНржг, рзнрзж% ржирж┐рж░рж╛ржкржж`;
                }

                if (lowerMessage.includes('рж▓ржХрзНрж╖рзНржп') || lowerMessage.includes('goal') || lowerMessage.includes('ржкрж░рж┐ржХрж▓рзНржкржирж╛')) {
                    return `ржЖрж░рзНржерж┐ржХ рж▓ржХрзНрж╖рзНржп ржирж┐рж░рзНржзрж╛рж░ржг ржЦрзБржмржЗ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржгред ржПржЦрж╛ржирзЗ ржПржХржЯрж┐ ржХрж╛рж░рзНржпржХрж░ ржкржжрзНржзрждрж┐:

ЁЯОп **SMART рж▓ржХрзНрж╖рзНржп ржирж┐рж░рзНржзрж╛рж░ржг:**
тАв **S**pecific (рж╕рзБржирж┐рж░рзНржжрж┐рж╖рзНржЯ)
тАв **M**easurable (ржкрж░рж┐ржорж╛ржкржпрзЛржЧрзНржп)
тАв **A**chievable (ржЕрж░рзНржЬржиржпрзЛржЧрзНржп)
тАв **R**elevant (ржкрзНрж░рж╛рж╕ржЩрзНржЧрж┐ржХ)
тАв **T**ime-bound (рж╕ржоржпрж╝рж╕рзАржорж╛)

**рж╕рж╛ржзрж╛рж░ржг рж▓ржХрзНрж╖рзНржпрж╕ржорзВрж╣:**
рзз. ржЬрж░рзБрж░рж┐ рждрж╣ржмрж┐рж▓ (рзм ржорж╛рж╕рзЗрж░ ржЦрж░ржЪ)
рзи. ржмрж╛ржбрж╝рж┐ ржХрзЗржирж╛
рзй. рж╕ржирзНрждрж╛ржирзЗрж░ рж╢рж┐ржХрзНрж╖рж╛
рзк. ржЕржмрж╕рж░ ржкрж░рж┐ржХрж▓рзНржкржирж╛
рзл. ржмрзНржпржмрж╕рж╛ рж╢рзБрж░рзБ

**ржкрж░рж╛ржорж░рзНрж╢:** ржкрзНрж░рждрж┐ржЯрж┐ рж▓ржХрзНрж╖рзНржпрзЗрж░ ржЬржирзНржп ржЖрж▓рж╛ржжрж╛ ржмрж┐ржирж┐ржпрж╝рзЛржЧ ржкрж░рж┐ржХрж▓рзНржкржирж╛ ржХрж░рзБржиред`;
                }

                // Default response for general queries
                return `ржЖржкржирж╛рж░ ржкрзНрж░рж╢рзНржиржЯрж┐ ржЦрзБржмржЗ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржгред ржЖржорж┐ ржЖржкржирж╛ржХрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рждрзЗ ржЪрж╛ржЗред

ЁЯдЭ **ржЖржорж┐ ржпрзЗржнрж╛ржмрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рждрзЗ ржкрж╛рж░рж┐:**
тАв ржмрж┐ржирж┐ржпрж╝рзЛржЧ ржкрж░рж╛ржорж░рзНрж╢
тАв ржЭрзБржБржХрж┐ ржорзВрж▓рзНржпрж╛ржпрж╝ржи
тАв ржЖрж░рзНржерж┐ржХ ржкрж░рж┐ржХрж▓рзНржкржирж╛
тАв рж╕ржЮрзНржЪржпрж╝ ржХрзМрж╢рж▓
тАв ржмрж╛ржЬрж╛рж░ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг

ржЖржкржирж╛рж░ ржмржпрж╝рж╕, ржЖржпрж╝, ржПржмржВ ржЭрзБржБржХрж┐ ржирзЗржУржпрж╝рж╛рж░ ржХрзНрж╖ржорждрж╛рж░ ржЙржкрж░ ржнрж┐рждрзНрждрж┐ ржХрж░рзЗ ржЖржорж┐ ржЖрж░ржУ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржкрж░рж╛ржорж░рзНрж╢ ржжрж┐рждрзЗ ржкрж╛рж░ржмред 

ЁЯТб **ржкрж░рж╛ржорж░рзНрж╢:** ржЖржкржирж╛рж░ ржкрзНрж░рзЛржлрж╛ржЗрж▓ рж╕ржорзНржкрзВрж░рзНржг ржХрж░рзБржи ржпрж╛рждрзЗ ржЖржорж┐ ржЖрж░ржУ ржмрзНржпржХрзНрждрж┐ржЧрждржХрзГржд ржкрж░рж╛ржорж░рзНрж╢ ржжрж┐рждрзЗ ржкрж╛рж░рж┐ред

ржЖрж░ржУ ржХрзЛржирзЛ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржкрзНрж░рж╢рзНржи ржерж╛ржХрж▓рзЗ ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛ ржХрж░рзБржи!`;
            },

            clearMessages: () => {
                set({ messages: [] });
            },

            setTyping: (isTyping: boolean) => {
                set({ isTyping });
            },

            clearError: () => {
                set({ error: null });
            },
        }),
        {
            name: 'chat-storage',
            storage: createJSONStorage(() => AsyncStorage),
            partialize: (state) => ({
                messages: state.messages.slice(-50), // Keep only last 50 messages
                conversationId: state.conversationId,
            }),
        }
    )
);

